/*
 * EditItem.java
 *
 * Created on 28.08.2009, 19:26:43
 */

package celsius.Dialogs;

import celsius.*;
import celsius.tools.Parser;
import celsius.tools.toolbox;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;

/**
 *
 * @author cnsaeman
 */
public final class EditItem extends javax.swing.JDialog {

    private final ArrayList<Item> docs;
    private final ArrayList<String> tags;
    private Item doc;
    private final Resources RSC;
    public boolean multi;
    public boolean authorsmodified;
    public boolean typemodified;

    private KeyValueTableModel KVTM;

    /** Creates new form DialogEditData */
    public EditItem(MainFrame parent, Resources rsc, ArrayList<Item> ds) {
        super(parent, true);
        tags=new ArrayList<String>();
        docs=ds;
        doc=docs.get(0);
        RSC=rsc;
        multi=(docs.size()>1);
        setIconImage(rsc.getOriginalIcon("book_edit"));
        initComponents();
        this.setSize(RSC.guiScale(605),RSC.guiScale(517));
        jTInfo.setModel(new KeyValueTableModel("Tag", "Value"));
        RSC.SM.register(this, "add_version_selected", new JComponent[] {jBtnApplyVName,jBtnSwap,jBtnDel,jBtnView,jTFVersionName});
        if (multi) {
            RSC.SM.switchOff(this, "add_version_selected");
            jBtnUp.setEnabled(false);
            jLVersions.setEnabled(false);
        } else {
            fillVList();
            jBtnUp.setEnabled(false);
            RSC.SM.switchOff(this, "add_version_selected");
        }
        resetDocumentData();
        toolbox.centerFrame(this);
    }

    public void fillVList() {
        DefaultListModel DLM=new DefaultListModel();
        for (String key : doc.getAITags()) {
            if ((key.startsWith("altversion-label-")) && (doc.get(key)!=null)) {
                DLM.addElement(doc.get(key));
            }
        }
        jLVersions.setModel(DLM);
    }

    public void resetDocumentData() {
        tags.clear();
        for (String tag : docs.get(0).totalKeySet())
            tags.add(tag);
        for (String tag : docs.get(0).Lib.listOf("standardfields"))
            if (!tags.contains(tag)) tags.add(tag);
        tags.remove("addinfo");
        tags.remove("location");
        tags.remove("id");
        KVTM=new KeyValueTableModel("Tag", "Value");
        for (String k : tags) {
            String t=doc.get(k);
            if (t==null) t="<unknown>";
            KVTM.addRow(Parser.LowerEndOfWords(k), t);
        }
        jTInfo.setModel(KVTM);
        TableColumn column = jTInfo.getColumnModel().getColumn(1);
        column.setPreferredWidth(RSC.guiScale(230));
        column.setCellEditor(new InfoEditor(RSC, doc.Lib.ChoiceFields, doc.Lib.IconFields,doc.Lib.IconDictionary));
        column.setPreferredWidth(RSC.guiScale(400));
        column.setWidth(RSC.guiScale(400));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jBtnApply = new javax.swing.JButton();
        jBtnReset = new javax.swing.JButton();
        jBtnEditExt = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTInfo = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLVersions = new javax.swing.JList();
        jTFVersionName = new javax.swing.JTextField();
        jBtnUp = new javax.swing.JButton();
        jBtnApplyVName = new javax.swing.JButton();
        jBtnDel = new javax.swing.JButton();
        jBtnSwap = new javax.swing.JButton();
        jBtnView = new javax.swing.JButton();
        jBtnClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit Document");
        setIconImage(null);
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setFont(jPanel3.getFont());
        jPanel3.setPreferredSize(new java.awt.Dimension(600, 200));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 0, 10, 0));
        jPanel4.setPreferredSize(new java.awt.Dimension(600, 40));

        jBtnApply.setText("Apply");
        jBtnApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnApplyActionPerformed(evt);
            }
        });

        jBtnReset.setText("Reset");
        jBtnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnResetActionPerformed(evt);
            }
        });

        jBtnEditExt.setText("Edit ext multiple");
        jBtnEditExt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEditExtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtnEditExt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnReset)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnApply))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnApply)
                    .addComponent(jBtnReset)
                    .addComponent(jBtnEditExt))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.add(jPanel4, java.awt.BorderLayout.SOUTH);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Document Data"));

        jTInfo.setFont(jTInfo.getFont());
        jTInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jTInfo.setRowHeight(RSC.guiScale(20)
        );
        jTInfo.setRowMargin(RSC.guiScale(4));
        jScrollPane2.setViewportView(jTInfo);

        jPanel3.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel6.setFont(jPanel6.getFont());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Version management"));

        jLVersions.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jLVersions.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jLVersionsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jLVersions);

        jBtnUp.setText("Move up");
        jBtnUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnUpActionPerformed(evt);
            }
        });

        jBtnApplyVName.setText("Apply ");
        jBtnApplyVName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnApplyVNameActionPerformed(evt);
            }
        });

        jBtnDel.setText("Delete");
        jBtnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDelActionPerformed(evt);
            }
        });

        jBtnSwap.setText("Swap with main doc");
        jBtnSwap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSwapActionPerformed(evt);
            }
        });

        jBtnView.setText("View");
        jBtnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTFVersionName, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jBtnUp)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jBtnView)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jBtnDel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jBtnApplyVName)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jBtnSwap))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTFVersionName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBtnApplyVName)
                            .addComponent(jBtnSwap))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBtnUp)
                            .addComponent(jBtnView)
                            .addComponent(jBtnDel)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jBtnClose.setMnemonic('c');
        jBtnClose.setText("Close");
        jBtnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtnClose))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnClose))
        );

        jPanel2.add(jPanel6, java.awt.BorderLayout.SOUTH);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 605, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCloseActionPerformed
        this.dispose();
}//GEN-LAST:event_jBtnCloseActionPerformed

    private void jLVersionsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jLVersionsValueChanged
        if (evt.getValueIsAdjusting()) return;
        if (jLVersions.getSelectedIndex()==-1) {
            RSC.SM.switchOff(this, "add_version_selected");
        } else {
            RSC.SM.switchOn(this, "add_version_selected");
            jTFVersionName.setText((String)jLVersions.getSelectedValue());
        }
        if (jLVersions.getSelectedIndex()<1) {
            jBtnUp.setEnabled(false);
        } else {
            jBtnUp.setEnabled(true);
        }
    }//GEN-LAST:event_jLVersionsValueChanged

    private void jBtnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnViewActionPerformed
        String nmb=getSelectedNmb();
        RSC.Configuration.view(doc, nmb);
    }//GEN-LAST:event_jBtnViewActionPerformed

    private void jBtnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDelActionPerformed
        int i=toolbox.QuestionYN(this,"Are you sure you want to delete this attached document?", "Warning:");
        if (i==JOptionPane.NO_OPTION) return;
        String nmb=getSelectedNmb();
        doc.removeAltVersion(nmb);
        fillVList();
    }//GEN-LAST:event_jBtnDelActionPerformed

    private void jBtnApplyVNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnApplyVNameActionPerformed
        String s=jTFVersionName.getText();
        String nmb=getSelectedNmb();
        doc.put("altversion-label-"+nmb, s);
        doc.save();
        fillVList();
    }//GEN-LAST:event_jBtnApplyVNameActionPerformed

    private void jBtnSwapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSwapActionPerformed
        String nmb=getSelectedNmb();
        doc.swapWithMain(nmb);
        doc.save();
        fillVList();
    }//GEN-LAST:event_jBtnSwapActionPerformed

    private void jBtnUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnUpActionPerformed
        String nmb1=getSelectedNmb();
        String nmb2=this.getPreviousNmb();
        doc.swapAltVersions(nmb1,nmb2);
        fillVList();
    }//GEN-LAST:event_jBtnUpActionPerformed

    private void jBtnApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnApplyActionPerformed
        ArrayList<String> values=new ArrayList<String>();
        for (int i=0; i<KVTM.getRowCount(); i++) {
            String s=(String) KVTM.getValueAt(i,1);
            if (s.equals("<unknown>") || s.equals("")) values.add(null);
            else values.add(s);
        }
        boolean write=false;
        for (String tag : tags) {
            int i=tags.indexOf(tag);
            if ((values.get(i)==null) && (docs.get(0).get(tag)!=null)) {
                write=true;
                for (Item doc : docs)
                    doc.put(tag,null);
            }
            if (((values.get(i)!=null) && (docs.get(0).get(tag)==null)) || ((values.get(i)!=null) && !values.get(i).equals(docs.get(0).get(tag)))) {
                write=true;
                for (Item doc : docs)
                    doc.put(tag, values.get(i));
            }
        }
        if (write) {
            for (Item doc : docs)
                doc.save();
        }
    }//GEN-LAST:event_jBtnApplyActionPerformed

    private void jBtnEditExtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEditExtActionPerformed
        int i=jTInfo.getSelectedRow();
        if (i==-1) {
            toolbox.Warning(this, "Please select a key to edit first.", "Cancelling...");
            return;
        }
        String k=(String)jTInfo.getModel().getValueAt(i, 0);
        (new EditExtItems(this,docs,k,RSC)).setVisible(true);
        resetDocumentData();
    }//GEN-LAST:event_jBtnEditExtActionPerformed

    private void jBtnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnResetActionPerformed
        resetDocumentData();
    }//GEN-LAST:event_jBtnResetActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnApply;
    private javax.swing.JButton jBtnApplyVName;
    private javax.swing.JButton jBtnClose;
    private javax.swing.JButton jBtnDel;
    private javax.swing.JButton jBtnEditExt;
    private javax.swing.JButton jBtnReset;
    private javax.swing.JButton jBtnSwap;
    private javax.swing.JButton jBtnUp;
    private javax.swing.JButton jBtnView;
    private javax.swing.JList jLVersions;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTFVersionName;
    private javax.swing.JTable jTInfo;
    // End of variables declaration//GEN-END:variables

    private String getSelectedNmb() {
        String val=(String)jLVersions.getSelectedValue();
        String nmb="";
        for (String key : doc.getAITags())
            if ((doc.get(key)!=null) && (doc.get(key).equals(val)))
                nmb=Parser.CutFromLast(key, "-");
        return(nmb);
    }

    private String getPreviousNmb() {
        String val=(String)jLVersions.getModel().getElementAt(jLVersions.getSelectedIndex()-1);
        String nmb="";
        for (String key : doc.getAITags())
            if ((doc.get(key)!=null) && (doc.get(key).equals(val)))
                nmb=Parser.CutFromLast(key, "-");
        return(nmb);
    }

}
